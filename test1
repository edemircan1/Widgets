</div>

      {/* FLOATING INFO MESSAGES */}
      <div className={'floatingInfoMsg'}>
        {!this.state.enableForNewProfile && this.props.chartRender &&
          <React.Fragment>
            <div title={infoMsgWhileSelectingOrDrawing}>
              <Alert tabIndex={0} className={classNames('alignDismissibleInfo py-1', this.state.dismissInfoMsg ? 'showMessage' : 'hideMessage')}
                onClose={this.dismissInfoMsg}
                open={this.state.dismissInfoMsg}
                text={infoMsgWhileSelectingOrDrawing}
                type={'info'}
                withIcon
                closable
              />
            </div>
            <div title={infoMsgWhileSelectingOrDrawing}>
              <Alert tabIndex={0} className={classNames('alignDismissibleInfo py-1', this.state.dismissWarningMsg ? 'showMessage' : 'hideMessage')}
                onClose={this.dismissWarningMsg}
                open={this.state.dismissWarningMsg}
                text={infoMsgWhileSelectingOrDrawing}
                type={'warning'}
                withIcon
                closable
              />
            </div>
          </React.Fragment>
        }
      </div>

      {/* FOOTER WITH RESET/NEW PROFILE BUTTONS */}
      <div className={'ep-widget-footer'}>
        <div className={'w-100 footer-display'}>
          <Button role={'button'} aria-label={this.nls('backButtonLabel')} title={this.nls('backButtonLabel')}
            className={'m-1 text-break'} size={'default'} type='tertiary' onClick={this.props.onNavBack}>
            <Icon size={16} autoFlip icon={epIcon.arrowNavBack} />
            {this.nls('backButtonLabel')}
          </Button>

          {this.props.commonDsGeneralSettings?.buttonStyle === ButtonTriggerType.IconText &&
            <Button role={'button'} aria-label={this.nls('doneButtonLabel')} title={this.nls('doneButtonLabel')}
              className={this.state.enableForNewProfile || this.props.onDrawingComplete || this.state.noValidInput ||
                (this.props.selectMode && this.props.chartRender && !this.props.isNewSegmentsForSelection)
                ? 'hidden'
                : 'm-1 actionButton text-break'}
              size={'default'} type='primary' onClick={this.onDoneClick}>
              <React.Fragment>
                <Icon size={16} icon={epIcon.doneIcon} />
                {this.nls('doneButtonLabel')}
              </React.Fragment>
            </Button>
          }

          {this.props.chartRender && this.props.commonDsGeneralSettings?.buttonStyle === ButtonTriggerType.IconText &&
            <React.Fragment>
              <Button role={'button'} aria-label={this.nls('clearButtonLabel')} title={this.nls('clearButtonLabel')}
                className={this.state.enableForNewProfile || this.props.onDrawingComplete ||
                  (this.props.selectMode && this.props.chartRender && !this.props.isNewSegmentsForSelection)
                  ? 'hidden'
                  : 'm-1 actionButton text-break'}
                size={'default'} type='default' onClick={this.onClearButtonClick}>
                <Icon size={16} icon={epIcon.clearIcon} />
                {this.nls('clearButtonLabel')}
              </Button>
            </React.Fragment>
          }

          {(this.state.enableForNewProfile || this.props.onDrawingComplete || this.state.noValidInput ||
            (this.props.selectMode && this.props.chartRender && !this.props.isNewSegmentsForSelection)) &&
            this.props.commonDsGeneralSettings?.buttonStyle === ButtonTriggerType.IconText &&
            <Button role={'button'} aria-label={this.nls('newProfileButtonLabel')} title={this.nls('newProfileButtonLabel')}
              className={'m-1 actionButton text-break'} size={'default'} type='primary' onClick={this.onNewProfileClick}>
              <React.Fragment>
                <Icon size={16} icon={this.props.drawMode ? epIcon.drawIcon : epIcon.selectIcon} />
                {this.nls('newProfileButtonLabel')}
              </React.Fragment>
            </Button>
          }
        </div>
      </div>
    </div>
  }
