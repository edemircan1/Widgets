// config.ts - Widget Configuration Interface
export interface Config {
useMapWidget: string
}

// settings/setting.tsx - Widget Settings Panel
/** @jsx jsx */
import {
React,
jsx,
Immutable,
UseDataSource
} from ‘jimu-core’
import { AllWidgetSettingProps } from ‘jimu-for-builder’
import {
MapWidgetSelector,
SettingSection,
SettingRow
} from ‘jimu-ui/advanced/setting-components’
import { Config } from ‘../config’

export default class Setting extends React.PureComponent<
AllWidgetSettingProps<Config>

> {
> onMapWidgetSelected = (useMapWidgetIds: string[]) => {
> this.props.onSettingChange({
> id: this.props.id,
> config: this.props.config.set(‘useMapWidget’, useMapWidgetIds[0])
> })
> }

render() {
return (
<div className=“widget-setting-drop-pin” style={{ padding: ‘20px’ }}>
<SettingSection
className="map-selector-section"
title="Map Selection"
>
<SettingRow>
<MapWidgetSelector
onSelect={this.onMapWidgetSelected}
useMapWidgetIds={
this.props.config.useMapWidget
? [this.props.config.useMapWidget]
: []
}
/>
</SettingRow>
</SettingSection>

```
    <SettingSection
      className="instructions-section"
      title="Instructions"
    >
      <div style={{ 
        padding: '12px', 
        background: '#f8f9fa', 
        borderRadius: '4px',
        fontSize: '14px',
        color: '#495057'
      }}>
        <h4 style={{ margin: '0 0 8px 0', fontSize: '14px' }}>How to use the Drop a Pin widget:</h4>
        <ol style={{ margin: 0, paddingLeft: '20px' }}>
          <li>Select a map widget above</li>
          <li>Click the pin button to enter drop mode</li>
          <li>Click anywhere on the map to drop a pin</li>
          <li>Edit pin name and color in the popup</li>
          <li>Click existing pins to modify or remove them</li>
          <li>Click coordinates to copy to clipboard</li>
        </ol>
      </div>
    </SettingSection>
  </div>
)
```

}
}

// manifest.json - Widget Manifest
{
“name”: “drop-pin”,
“type”: “widget”,
“version”: “1.0.0”,
“exbVersion”: “1.14.0”,
“author”: “Custom Widget Developer”,
“description”: “A widget to drop pins on the map with customizable names and colors”,
“copyright”: “”,
“license”: “”,
“main”: “dist/runtime/widget.js”,
“setting”: “dist/setting/setting.js”,
“icon”: “📍”,
“properties”: {
“supportInlineEditing”: false,
“supportRepeat”: false,
“canCrossFilterDS”: false
},
“defaultConfig”: {
“useMapWidget”: “”
},
“translatedLocales”: [“en”],
“dependencies”: [“jimu-arcgis”],
“hasStyle”: true,
“hasConfig”: true,
“hasSettingPage”: true,
“category”: “Map Tools”,
“layouts”: [
{
“name”: “default”,
“type”: “row”,
“content”: []
}
]
}

// nls/default.ts - Localization
export default {
widgetName: ‘Drop a Pin’,
widgetDescription: ‘Drop pins on the map with custom names and colors’,
selectMapWidget: ‘Please select a map widget’,
dropPinMode: ‘Click to enter drop pin mode’,
cancelDropMode: ‘Click to cancel drop pin mode’,
pinName: ‘Pin Name’,
pinColor: ‘Pin Color’,
coordinates: ‘Coordinates’,
saveChanges: ‘Save Changes’,
removePin: ‘Remove Pin’,
copyCoordinates: ‘Click to copy coordinates’,
instructions: {
title: ‘Instructions’,
step1: ‘Click the pin button to enter drop mode’,
step2: ‘Click anywhere on the map to drop a pin’,
step3: ‘Edit pin properties in the popup’,
step4: ‘Click existing pins to modify them’
}
}