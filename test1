render () {
    // ... mevcut deƒüi≈ükenler

    const settingsOptions = this.settingsOptionsRender()
    const statsRender = this.statisticsDisplay()
    const exportInfoRender = this.exportOptionDisplay()

    // YENƒ∞ EKLENEN: Tower Summary Hesaplamasƒ±
    const towerSummary = this.props.towerData ? {
      totalTowers: this.props.towerData.length,
      uniqueUSIDs: [...new Set(this.props.towerData.flatMap(t => t.towers.map(tower => tower.usid)))],
      avgHeight: this.props.towerData.length > 0 ? 
        this.props.towerData.reduce((sum, t) => sum + t.towerHeightFt, 0) / this.props.towerData.length : 0,
      maxHeight: this.props.towerData.length > 0 ? 
        Math.max(...this.props.towerData.map(t => t.towerHeightFt)) : 0
    } : null

    return <div className={'h-100 w-100'} css={getContainerStyle(this.props.theme)}>
      {/* YENƒ∞ EKLENEN: FANCY HEADER */}
      {this.props.chartRender && (
        <div style={{
          background: 'linear-gradient(135deg, #1e3c72 0%, #2a5298 100%)',
          color: 'white',
          padding: '12px 16px',
          borderRadius: '8px 8px 0 0',
          marginBottom: '8px',
          boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
            <div>
              <h3 style={{ 
                margin: '0 0 4px 0', 
                fontSize: '18px', 
                fontWeight: '600',
                textShadow: '0 1px 2px rgba(0,0,0,0.3)'
              }}>
                üì° Custom Cell Elevation Profile
              </h3>
              <div style={{ fontSize: '13px', opacity: 0.9 }}>
                Advanced terrain analysis with cellular infrastructure mapping
              </div>
            </div>
            
            {/* Tower Summary Badge */}
            {towerSummary && towerSummary.totalTowers > 0 && (
              <div style={{
                background: 'rgba(255,255,255,0.15)',
                borderRadius: '12px',
                padding: '8px 12px',
                backdropFilter: 'blur(10px)',
                border: '1px solid rgba(255,255,255,0.2)'
              }}>
                <div style={{ fontSize: '11px', opacity: 0.8, marginBottom: '2px' }}>
                  INTERSECTED TOWERS
                </div>
                <div style={{ 
                  fontSize: '20px', 
                  fontWeight: 'bold',
                  color: '#4FC3F7'
                }}>
                  {towerSummary.uniqueUSIDs.length}
                </div>
                <div style={{ fontSize: '10px', opacity: 0.7 }}>
                  unique USIDs
                </div>
              </div>
            )}
          </div>
          
          {/* Tower Details Strip */}
          {towerSummary && towerSummary.totalTowers > 0 && (
            <div style={{
              marginTop: '12px',
              padding: '8px 12px',
              background: 'rgba(255,255,255,0.1)',
              borderRadius: '6px',
              display: 'flex',
              gap: '20px',
              flexWrap: 'wrap',
              border: '1px solid rgba(255,255,255,0.15)'
            }}>
              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                <span style={{ fontSize: '16px' }}>üóº</span>
                <div>
                  <div style={{ fontSize: '10px', opacity: 0.7 }}>TOTAL LOCATIONS</div>
                  <div style={{ fontSize: '14px', fontWeight: '600' }}>{towerSummary.totalTowers}</div>
                </div>
              </div>
              
              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                <span style={{ fontSize: '16px' }}>üìè</span>
                <div>
                  <div style={{ fontSize: '10px', opacity: 0.7 }}>AVG HEIGHT</div>
                  <div style={{ fontSize: '14px', fontWeight: '600' }}>{towerSummary.avgHeight.toFixed(1)}ft</div>
                </div>
              </div>
              
              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                <span style={{ fontSize: '16px' }}>‚õ∞Ô∏è</span>
                <div>
                  <div style={{ fontSize: '10px', opacity: 0.7 }}>MAX HEIGHT</div>
                  <div style={{ fontSize: '14px', fontWeight: '600' }}>{towerSummary.maxHeight.toFixed(1)}ft</div>
                </div>
              </div>
              
              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>
                <span style={{ fontSize: '16px' }}>üè∑Ô∏è</span>
                <div>
                  <div style={{ fontSize: '10px', opacity: 0.7 }}>USIDs</div>
                  <div style={{ 
                    fontSize: '12px', 
                    fontWeight: '500',
                    maxWidth: '200px',
                    whiteSpace: 'nowrap',
                    overflow: 'hidden',
                    textOverflow: 'ellipsis'
                  }}>
                    {towerSummary.uniqueUSIDs.slice(0, 3).join(', ')}
                    {towerSummary.uniqueUSIDs.length > 3 && ` +${towerSummary.uniqueUSIDs.length - 3} more`}
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>
      )}

      <div style={{ height: 35 }} className={'ep-widget-header d-flex w-100'}>
        {/* ... mevcut header kodlarƒ± */}
      </div>

      {/* ... geri kalan kodlar aynƒ± */}



====== 


{/* COMPACT FANCY HEADER */}
      {this.props.chartRender && (
        <div style={{
          background: 'linear-gradient(90deg, #667eea 0%, #764ba2 100%)',
          color: 'white',
          padding: '10px 16px',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          borderRadius: '6px',
          marginBottom: '6px',
          boxShadow: '0 2px 6px rgba(0,0,0,0.15)'
        }}>
          <div>
            <h4 style={{ margin: 0, fontSize: '16px', fontWeight: '600' }}>
              üì° Custom Cell Elevation Profile
            </h4>
          </div>
          
          {towerSummary && towerSummary.totalTowers > 0 && (
            <div style={{ display: 'flex', gap: '16px', alignItems: 'center' }}>
              <div style={{ textAlign: 'center' }}>
                <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#FFD54F' }}>
                  {towerSummary.uniqueUSIDs.length}
                </div>
                <div style={{ fontSize: '10px', opacity: 0.8 }}>towers</div>
              </div>
              <div style={{ fontSize: '12px', opacity: 0.9 }}>
                {towerSummary.uniqueUSIDs.slice(0, 3).join(', ')}
                {towerSummary.uniqueUSIDs.length > 3 && '...'}
              </div>
            </div>
          )}
        </div>
      )}
