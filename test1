{
  "name": "drop-pin",
  "type": "widget",
  "version": "1.0.0",
  "exbVersion": "1.13.0",
  "author": "Custom",
  "description": "A widget to drop pins on the map and manage their properties",
  "copyright": "",
  "license": "MIT",
  "properties": {},
  "translatedLocales": ["en"],
  "defaultSize": {
    "width": 300,
    "height": 400
  },
  "supportedThemes": ["default"],
  "hasStyle": true,
  "hasConfig": true,
  "hasSettingPage": true,
  "hasVersionManager": false,
  "supportRepeat": false,
  "supportInlineEditing": false,
  "useDataSources": [
    {
      "type": "MAP"
    }
  ]
}


============



import { ImmutableObject } from 'seamless-immutable'

export interface Config {
  // Add any configuration properties here if needed in the future
}

export type IMConfig = ImmutableObject<Config>


============


/** @jsx jsx */
import { React, jsx, Immutable } from 'jimu-core'
import { AllWidgetSettingProps } from 'jimu-for-builder'
import { MapWidgetSelector, SettingSection, SettingRow } from 'jimu-ui/advanced/setting-components'
import { IMConfig } from '../config'

const Setting = (props: AllWidgetSettingProps<IMConfig>) => {
  const onMapWidgetSelected = (useMapWidgetIds: string[]) => {
    props.onSettingChange({
      id: props.id,
      useMapWidgetIds: useMapWidgetIds
    })
  }

  return (
    <div className="widget-setting-drop-pin">
      <SettingSection title="Map">
        <SettingRow>
          <MapWidgetSelector 
            onSelect={onMapWidgetSelected} 
            useMapWidgetIds={props.useMapWidgetIds}
          />
        </SettingRow>
      </SettingSection>
    </div>
  )
}

export default Setting


===========


.widget-drop-pin {
  background-color: #fff;
  border-radius: 4px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.widget-drop-pin .pin-item {
  transition: background-color 0.2s ease;
}

.widget-drop-pin .pin-item:hover {
  background-color: #f5f5f5;
}

.widget-drop-pin .coordinates {
  font-family: monospace;
  font-size: 11px;
}
